# Chunk 1: setup
opts_chunk$set(cache=TRUE)
# Chunk 2
summary(cars)
# Chunk 3
plot(cars)
require(tidyverse)
install.packages("revealjs")
Package du tidyverse
![tidyverse](pics/tidyverse.png)
require(tidyverse)
require(ggpubr)
install.packages("FactoMineR")
install.packages("~/src/car_3.0-3.tar.gz",repos=NULL)
require(tidyverse)
data(mtcars)
mtcats %>% glimpse
mtcars %>% glimpse
p1 = ggplot(mtcars) + geom_point(aes(x=disp,y=hp))
p1 = ggplot(mtcars) + geom_point(aes(x=disp,y=hp,color=cyl))
p2 = ggplot(mtcars) + geom_histogram(aes(x=wt,group=cyl,color=cyl)
p2 = ggplot(mtcars) + geom_histogram(aes(x=wt,group=cyl,color=cyl))
p2 = ggplot(mtcars) + geom_histogram(aes(x=wt,group=cyl,color=cyl))
p2
p2 = ggplot(mtcars) + geom_histogram(aes(x=wt,group=cyl,fill=cyl))
p2
p2 = ggplot(mtcars) + geom_histogram(aes(x=wt,group=cyl,fill=as.factor(cyl)))
p2
p2 = ggplot(mtcars) + geom_histogram(aes(x=wt,group=cyl,fill=as.factor(cyl)),position="dodge")
p2
mtcars %>% glimpse
p2 = ggplot(mtcars) + geom_histogram(aes(x=carb,group=cyl,fill=as.factor(cyl)),position="dodge")
p2
p2 = ggplot(mtcars) + geom_histogram(aes(x=as.factor(carb),group=cyl,fill=as.factor(cyl)),position="dodge")
p2
p2 = ggplot(mtcars) + geom_histogram(aes(x=carb,group=cyl,fill=as.factor(cyl)),position="dodge")
p2
p1 | p2
(p1 | p2)
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
install.packages(c("adegenet", "ape", "backports", "BH", "BiocManager", "broom", "callr", "car", "carData", "caTools", "circlize", "classInt", "cli", "covr", "crosstalk", "curl", "dashboardthemes", "data.table", "DBI", "dbplyr", "deldir", "dendextend", "devtools", "digest", "dplyr", "DT", "ellipse", "ellipsis", "epitools", "factoextra", "FactoMineR", "forcats", "fs", "gdtools", "GGally", "ggforce", "ggplot2", "ggpubr", "ggraph", "ggrepel", "gh", "git2r", "GlobalOptions", "glue", "gplots", "graphlayouts", "gridtext", "gtools", "haven", "hexbin", "hms", "htmltools", "httpuv", "igraph", "jsonlite", "knitr", "later", "leafem", "leaflet", "leaps", "lifecycle", "lme4", "lmerTest", "locfit", "lubridate", "magick", "maptools", "mapview", "mime", "modelr", "nloptr", "openssl", "openxlsx", "pbkrtest", "pegas", "phytools", "picante", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "prettyunits", "processx", "promises", "ps", "purrr", "quadprog", "quantreg", "qwraps2", "randomcoloR", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "reshape2", "rex", "RgoogleMaps", "rJava", "rlang", "rmarkdown", "roxygen2", "rstatix", "rstudioapi", "rvcheck", "rversions", "rvest", "scales", "segmented", "selectr", "sf", "shiny", "shinycssloaders", "shinydashboardPlus", "shinyWidgets", "SnowballC", "sp", "SparseM", "spData", "spdep", "statmod", "stringdist", "stringi", "svglite", "systemfonts", "testthat", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytree", "tidyverse", "tinytex", "units", "usethis", "uuid", "V8", "vctrs", "withr", "xfun", "xlsx", "xml2", "yaml"))
require(tidyverse)
require(FactoMineR)
require(factoextra)
remotes::install_github("giocomai/ganttrify")
remotes::install_github("giocomai/ganttrify")
install.packages("jsonliste")
install.packages("jsonlite")
library(shiny)
runGitHub("shiny-introstats", "gastonstat", subdir = "ch12-regression-heteroscedastic")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("talgalili/d3heatmap")
setwd("~/work/AMR/DUMP/distributionHostDistance_compare")
require(tidyverse)
require(ggtree)
require(randomcoloR)
require(rlist)
require(tidytree)
require(ape)
require(geosphere)
colorHost = c("Human"="#000000",
"Cattle"="#8DD3C7",
"Chicken"="#e8eb34",
"Pig" = "#BEBADA",
"Dog" = "#FB8072",
"Cat" ="#BC80BD",
"Duck" = "#FDB462",
"Goose" = "#B3DE69",
"Horse" = "#FCCDE5",
"Turkey" = "#D9D9D9",
"Water" = "#80B1D3")
## ADD ONE FOR INTERHOSTS DATA
colorHost_inter = append(colorHost,c("Inter"="white"))
# first draw the basic tree
core = read.tree(file = "Fastree_sept_rooted.tree")
## Metadata parsing
metadata = read.csv("Metadata.csv")
metadata = metadata %>%
mutate(Host = ifelse(Host =="Poultry","Chicken",as.character(Host)))
meta = metadata %>%  select(sample = True_indiv_name,Host,Numero_foyer,Fokontany)
host = meta %>% select(sample,Host)
rownames(host) = meta$sample
geo = meta %>% select(sample,Numero_foyer,Fokontany)
geo
rownames(geo) = meta$sample
host %>% View
## Get pairwise distances from tree
distTips = cophenetic.phylo(core)
distTips %>% dim
# Deal with matrix to keep only upper diag values (avoid duplicated values)
# diag = T to also remove values on the diagonal (distance between same samples)
lowdiag = lower.tri(distTips,diag=T)
distTips[lowdiag]=NA
distTips = distTips %>% as.table %>% as.data.frame %>% filter(!is.na(Freq))
distTips
############# Now with Foyer
host %>% glimpse
geo %>% glimpse
distTips_foyer = distTips %>% left_join(geo,by=c("Var1"="sample")) %>%
mutate(Foyer1 = Numero_foyer) %>% select(-Numero_foyer) %>%
left_join(geo,by=c("Var2"="sample")) %>%
mutate(Foyer2 = Numero_foyer) %>% select(-Numero_foyer) %>%
mutate(type=ifelse(Foyer1==Foyer2,Foyer1,"Between Foyer")) %>%
select(-Foyer1,-Foyer2) %>%
mutate(InterIntra = ifelse(type=="Between Foyer","Between Foyer","Within Foyer"))
globalDistancePlotFoyer  = distTips_foyer %>% ggplot() +
geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Genetic distances")  +
scale_color_brewer(name="",type="qual", palette=1)
globalDistancePlotFoyer
distTipsGeoFokontany = distTips %>% left_join(geo,by=c("Var1"="sample")) %>%
mutate(Fokontany1 = Fokontany) %>% select(-Fokontany) %>%
left_join(geo,by=c("Var2"="sample")) %>%
mutate(Fokontany2 = Fokontany) %>% select(-Fokontany) %>%
mutate(type=ifelse(Fokontany1==Fokontany2,Fokontany1,"Between Fokontany")) %>%
select(-Fokontany1,-Fokontany2) %>% mutate(InterIntra = ifelse(type=="Between Fokontany","Between Fokontany","Within Fokontany"))
globalDistancePlotGeoFokontany  = distTipsGeoFokontany %>% ggplot() + geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Genetic distances")  + scale_color_brewer(name="",type="qual",
palette=1)
globalDistancePlotGeoFokontany
plot_grid(globalDistancePlotFoyer,globalDistancePlotGeoFokontany,nrow=2)
require(cowplot)
plot_grid(globalDistancePlotFoyer,globalDistancePlotGeoFokontany,nrow=2)
require(tidyverse)
require(ggtree)
require(randomcoloR)
require(rlist)
require(tidytree)
require(ape)
require(geosphere)
colorHost = c("Human"="#000000",
"Cattle"="#8DD3C7",
"Chicken"="#e8eb34",
"Pig" = "#BEBADA",
"Dog" = "#FB8072",
"Cat" ="#BC80BD",
"Duck" = "#FDB462",
"Goose" = "#B3DE69",
"Horse" = "#FCCDE5",
"Turkey" = "#D9D9D9",
"Water" = "#80B1D3")
## ADD ONE FOR INTERHOSTS DATA
colorHost_inter = append(colorHost,c("Inter"="white"))
# first draw the basic tree
core = read.tree(file = "Fastree_sept_rooted.tree")
## leave some space for inlay
ggtree(core,layout="fan",open.angle = 90)
## Metadata parsing
metadata = read.csv("Metadata.csv")
metadata = metadata %>%
mutate(Host = ifelse(Host =="Poultry","Chicken",as.character(Host)))
meta = metadata %>%  select(sample = True_indiv_name,Host,Numero_foyer,Fokontany)
host = meta %>% select(sample,Host)
rownames(host) = meta$sample
geo = meta %>% select(sample,Numero_foyer,Fokontany)
geo
rownames(geo) = meta$sample
## Get pairwise distances from tree
distTips = cophenetic.phylo(core)
distTips %>% dim
# Deal with matrix to keep only upper diag values (avoid duplicated values)
# diag = T to also remove values on the diagonal (distance between same samples)
lowdiag = lower.tri(distTips,diag=T)
distTips[lowdiag]=NA
distTips = distTips %>% as.table %>% as.data.frame %>% filter(!is.na(Freq))
distTips
distTipsGeoFokontany = distTips %>% left_join(geo,by=c("Var1"="sample")) %>%
mutate(Fokontany1 = Fokontany) %>% select(-Fokontany) %>%
left_join(geo,by=c("Var2"="sample")) %>%
mutate(Fokontany2 = Fokontany) %>% select(-Fokontany) %>%
mutate(type=ifelse(Fokontany1==Fokontany2,Fokontany1,"Between Fokontany")) %>%
select(-Fokontany1,-Fokontany2) %>% mutate(InterIntra = ifelse(type=="Between Fokontany","Between Fokontany","Within Fokontany"))
globalDistancePlotGeoFokontany  = distTipsGeoFokontany %>% ggplot() + geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Genetic distances")  + scale_color_brewer(name="",type="qual",
palette=1)
globalDistancePlotGeoFokontany
p3  = distTipsGeoFokontany %>% ggplot() + geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Genetic distances")  + scale_color_brewer(name="",type="qual",
palette=1)
p3
p3  = distTipsGeoFokontany %>% ggplot() + geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Pairwise genetic distances")  + scale_color_brewer(name="",type="qual",
palette=1)
p3
p3  = distTipsGeoFokontany %>% ggplot() + geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Pairwise genetic distances")  + scale_color_brewer(name="",type="qual",
palette=1)
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,color=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") + scale_color_brewer(name="",type="qual",
palette=1)
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,color=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") + scale_color_brewer(name="",type="qual",
p4                                                                   palette=1)
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,color=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_color_brewer(name="",type="qual",
palette=1)
p4
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_color_brewer(name="",type="qual",
palette=1)
p4
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_color_brewer(name="",type="qual",
palette=2)
p3  = distTipsGeoFokontany %>% ggplot() + geom_density(aes(x=Freq,color=InterIntra)) +
theme_minimal()  + xlab("Pairwise genetic distances")  + scale_color_brewer(name="",type="qual",
palette=2)
p3
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_color_brewer(name="",type="qual",
palette=2)
p4
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_color_brewer(name="",type="qual",
palette=2)
p4
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_color_brewer(name="",type="qual",
palette=3)
p4
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_fill_brewer(name="",type="qual",
palette=2)
p4
p4  = distTipsGeoFokontany %>% ggplot() + geom_violin(aes(x=InterIntra,y=Freq,fill=InterIntra)) +
theme_minimal()  + xlab("") + ylab("Pairwise genetic distances") +
scale_fill_brewer(name="",type="qual", palette=2) + theme(axis.text.x = element_blank())
p4
p3
distTipsGeoFokontany %>%  glimpse
distTipsGeoFokontany = distTips %>% left_join(geo,by=c("Var1"="sample")) %>%
mutate(Fokontany1 = Fokontany) %>% select(-Fokontany) %>%
left_join(geo,by=c("Var2"="sample")) %>%
mutate(Fokontany2 = Fokontany) %>% select(-Fokontany) %>%
mutate(type=ifelse(Fokontany1==Fokontany2,Fokontany1,"Between Fokontany")) %>%
mutate(InterIntra = ifelse(type=="Between Fokontany","Between Fokontany","Within Fokontany"))
distTipsGeoFokontany %>%  glimpse
distTipsGeoFokontany %>%  head
distTipsGeoFokontany = distTips %>% left_join(geo,by=c("Var1"="sample")) %>%
mutate(Fokontany1 = Fokontany) %>% select(-Fokontany) %>%
left_join(geo,by=c("Var2"="sample")) %>%
mutate(Fokontany2 = Fokontany) %>% select(-Fokontany) %>%
mutate(type=ifelse(Fokontany1==Fokontany2,as.character(Fokontany1),"Between Fokontany")) %>%
mutate(InterIntra = ifelse(type=="Between Fokontany","Between Fokontany","Within Fokontany"))
distTipsGeoFokontany %>%  head
ggplot(distTipsGeoFokontany) %>% geom_boxplot(aes(x = type,y = Freq,fill=type))
ggplot(distTipsGeoFokontany) + geom_boxplot(aes(x = type,y = Freq,fill=type))
ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) + theme()
geom_boxplot(aes(x = type,y = Freq,fill=type)) + theme_minimal() + theme(axis.text.x = element_text(angle = 45)
ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
theme_minimal() + theme(axis.text.x = element_text(angle = 45))
ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
theme_minimal() + theme(axis.text.x = element_text(angle = 45))
theme_minimal() + theme(axis.text.x = element_text(angle = 45))
theme_minimal() + theme(axis.text.x = element_text(angle = 45))
ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
scale_fill_manual(name ="") +
theme_minimal() + theme(axis.text.x = element_text(angle = 45))
ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
scale_fill_discrete(name ="") +
theme_minimal() + theme(axis.text.x = element_text(angle = 45))
p2+  ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
scale_fill_discrete(name ="") +
theme_minimal() + theme(axis.text.x = element_text(angle = 45)) +
xlab("")  + ylab("Pairwise genetic distances")
p2
p2+  ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
scale_fill_discrete(name ="") +
theme_minimal() + theme(axis.text.x = element_text(angle = 45)) +
xlab("")  + ylab("Pairwise genetic distances")
p2 =  ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
scale_fill_discrete(name ="") +
theme_minimal() + theme(axis.text.x = element_text(angle = 45)) +
xlab("")  + ylab("Pairwise genetic distances")
p2
p3
p4
core
gheatmap
ggtree(core)
ggtree(core,layout = circular)
ggtree(core,layout = "circular")
tree = ggtree(core,layout = "circular")
Metad
metad
meta = read.csv("Metadata.csv",header =T)
meta %>% glimpse
metad = meta %>% select(sample= True_indiv_name,Host)
rowsNames = metad$sample
metad = metad %>% select(-sample)
rownames(metad)= rowsNames
metad
meta = read.csv("Metadata.csv",header =T)
meta = read.csv("Metadata.csv",header =T)
meta %>% glimpse
metad = meta %>% select(sample= True_indiv_name,Fokontany)
rowsNames = metad$sample
metad = metad %>% select(-sample)
rownames(metad)= rowsNames
metad
gheatmap(tree,metad, width=1, font.size=8,
colnames_position= "top" , colnames_angle = 90,
colnames_offset_y = 0, hjust = 0) +
theme(plot.margin=unit(c(3,1,1.5,1.2),"cm"))
gheatmap(tree,metad)
gheatmap(tree,metad,width = 1)
gheatmap(tree,metad,width = 0.5)
gheatmap(tree,metad,width = 0.2)
gheatmap(tree,metad,width = 0.2,colnames = F)
gheatmap(tree,metad,width = 0.2,colnames = F) + scale_fill_discrete(name = "")
p1 = gheatmap(tree,metad,width = 0.2,colnames = F) + scale_fill_discrete(name = "")
cowplot(p1,p2,p3,p4,ncol=2)
require(cowplot)
plot.grid(p1,p2,p3,p4,ncol=2)
plot_grid(p1,p2,p3,p4,ncol=2)
p2 =  ggplot(distTipsGeoFokontany %>%
mutate(type = fct_relevel(type,"Between Fokontany",after=Inf))) +
geom_boxplot(aes(x = type,y = Freq,fill=type)) +
scale_fill_discrete(name ="") +
theme_minimal() + theme(axis.text.x = element_text(angle = 45,hjust = 1)) +
xlab("")  + ylab("Pairwise genetic distances")
p2
plot_grid(p1,p2,p3,p4,ncol=2)
distTipsGeoFokontany %>% glimpse
wilcox.test(data = distTipsGeoFokontany,Freq ~ InterIntra)
ggsave("Fokontany.pdf")
ggsave("Fokontany.pdf",width = 20,height = 20)
ggsave("Fokontany.pdf",width = 12,height = 12)
